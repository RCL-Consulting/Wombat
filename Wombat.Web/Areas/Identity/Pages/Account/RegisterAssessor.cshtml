@page
@model RegisterAsessorModel
@{
    ViewData["Title"] = "Register as an Assessor";
}

<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-12">
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h2>Create a new account.</h2>
            <hr />

            <h4>Personal details</h4>
            <hr />
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Name" class="form-control" aria-required="true"/>
                <label asp-for="Input.Name"></label>
                <span asp-validation-for="Input.Name" class="text-danger"></span>
            </div>
            <br />
            <div class="form-floating mb-3">
                <input asp-for="Input.Surname" class="form-control" aria-required="true"/>
                <label asp-for="Input.Surname"></label>
                <span asp-validation-for="Input.Surname" class="text-danger"></span>
            </div>
            <br />
            <div class="form-floating mb-3">
                <input asp-for="Input.PhoneNumber" class="form-control" aria-required="true" />
                <label asp-for="Input.PhoneNumber"></label>
                <span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>
            </div>
            <br />

            <h4>Training details</h4>
            <hr />
            <div>
                <select asp-for="Input.InstitutionId" asp-items="@Model.Institutions" class="form-select" aria-required="true">
                    <option value="">-- Choose an institution --</option>
                </select>
                <span asp-validation-for="Input.InstitutionId" class="text-danger"></span>
            </div>
            <br />

            <div class="form-floating mb-3">
                <input asp-for="Input.IdNumber" class="form-control" aria-required="true"  />
                <label asp-for="Input.IdNumber"></label>
                <span asp-validation-for="Input.IdNumber" class="text-danger"></span>
            </div>
            <br />

            <div class="form-floating mb-3">
                <input asp-for="Input.HPCSANumber" class="form-control" aria-required="true" />
                <label asp-for="Input.HPCSANumber"></label>
                <span asp-validation-for="Input.HPCSANumber" class="text-danger"></span>
            </div>
            <br />

            <h4>Login details</h4>
            <hr />
            <div class="form-floating mb-3">
                <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" />
                <label asp-for="Input.Email">Email</label>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <br />
            <div class="form-floating mb-3">
                <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" />
                <label asp-for="Input.Password">Password</label>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <br />
            <div class="form-floating mb-3">
                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" />
                <label asp-for="Input.ConfirmPassword">Confirm Password</label>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            <br />
            <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
        </form>
    </div>
</div>



@section Scripts 
{
    <script>
        const subspecialities = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Subspecialities));

        function updateSubspecialityOptions() 
        {
            const specialitySelect = document.getElementById('specialitySelect');
            const subspecialitySelect = document.getElementById('subspecialitySelect');

            // Clear current options
            subspecialitySelect.innerHTML = '<option value="">-- Choose a subspeciality --</option>';

            const selectedId = parseInt(specialitySelect.value);

            if (subspecialities[selectedId]) 
            {
                subspecialities[selectedId].forEach(sub => {
                    const option = document.createElement('option');
                    option.value = sub.Value; // Use the value of the SelectListItem
                    option.textContent = sub.Text; // Use the text of the SelectListItem
                    subspecialitySelect.appendChild(option);
                });
            }
        }
    </script>

    <partial name="_ValidationScriptsPartial" />
}
