@model AssessmentCategoryVM

@{
    ViewData["Title"] = "Create";
}

<h1>Create an Assessment Category</h1>

<h4>AssessmentCategory</h4>
<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <br/>

            <div hidden id="OptionSetsContainer">
                <div id="OptionSets">
                <partial name="_OptionSetSelect" model="Model.OptionSets" />
                </div>
            </div>

            <div class="form-group col-md-12">
                <div id="newRow" class="col-md-12">
                    <input type="hidden" id="totalLans" value="0" />
                    <input type="hidden" id="totalOptions" value="0" />
                </div>
            </div>
            <br/>

            <div class="form-group">
                <a asp-action="Index" class="btn btn-dark">Back to List</a> &nbsp;
                <button id="addOptionRow" type="button" class="btn btn-info">Add</button> &nbsp;
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
            <br/>

        </form>
    </div>
</div>

@section Scripts
{
    <script>

        $("#addOptionRow").click(function () {

            var rowCount = parseInt($("#totalLans").val());
            rowCount++;
            $("#totalLans").val(rowCount);

            const masterSelect = document.getElementById("OptionSets");
            var newSelect = masterSelect.cloneNode(true);
            //newSelect.setAttribute('id', 'select' + rowCount );
            newSelect.childNodes[1].setAttribute('name', 'OptionCriteria[' + (rowCount - 1) + '].OptionSetId');
            newSelect.childNodes[1].setAttribute('class', 'form-control');
            newSelect.childNodes[1].setAttribute('style', 'width: 20%');
                        
            var html = '';
            html += '<div id="inputFormRow">';
            html += '<div class="input-group">';

            //change id attribute to name attribute and modify the name
            html += '<input type="number" style="width: 10%" type="text" value="' + (rowCount - 1) + '" name="OptionCriteria[' + (rowCount - 1) + '].Rank" class="form-control m-input" placeholder="Rank" autocomplete="off" required>';
            html += '<input style="width: 50%" type="text" name="OptionCriteria[' + (rowCount - 1) + '].Description" class="form-control m-input" placeholder="Option Text" autocomplete="off" required>';
            html += newSelect.innerHTML;
            html += '<div style="width: 15%" class="input-group-append">';
            html += '<button style="width: 100%" id="removeRow" type="button" class="btn btn-danger">Remove</button>';
            html += '</div>';
            html += '</div>';
            html += '<br/>';
            html += '</div>';
            $('#newRow').append(html);

        });

        $(document).on('click', '#removeRow', function () {
            var rowCount = parseInt($("#totalLans").val());
            rowCount--;
            $("#totalLans").val(rowCount);
            $(this).closest('#inputFormRow').remove();
        });

    </script>
}
