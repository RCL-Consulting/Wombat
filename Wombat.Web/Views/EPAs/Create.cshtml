@model EPAVM

@{
    ViewData["Title"] = "Create EPA";
}

<div class="container mt-4">
    <div class="card card-accent-create shadow-sm">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0"><i class="fas fa-tasks me-2"></i>Entrustable Professional Activities - Create</h5>
        </div>

        <form asp-action="Create" id="form">
            <div class="card-body">
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                <div class="mb-3">
                    <label asp-for="Name" class="form-label fw-semibold">Name</label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger small"></span>
                </div>

                <div class="mb-4">
                    <label asp-for="Description" class="form-label fw-semibold">Description</label>
                    <input asp-for="Description" class="form-control" />
                    <span asp-validation-for="Description" class="text-danger small"></span>
                </div>

                <h6 class="text-uppercase text-muted fw-bold mt-4 mb-2">Certification Field</h6>
                <hr />
                <div class="row g-3 mb-4">
                    <div class="col-md-6">
                        <label for="specialitySelect" class="form-label">Speciality</label>
                        <select asp-for="SpecialityId" class="form-select" id="specialitySelect" onchange="updateSubSpecialitySelect()">
                            <option value="">-- Select a speciality --</option>
                            @foreach (var option in Model.Specialities)
                            {
                                <option value="@option.Id">@option.Name</option>
                            }
                        </select>
                    </div>

                    <div class="col-md-6">
                        <label for="secondSelect" class="form-label">Subspeciality</label>
                        <select asp-for="SubSpecialityId" id="secondSelect" class="form-select">
                            <option value="">-- Select a subspeciality --</option>
                            @foreach (var option in Model.SubSpecialities)
                            {
                                <option value="@option.Id">@option.Name</option>
                            }
                        </select>
                    </div>
                </div>

                
                <h6 class="text-uppercase text-muted fw-bold mt-4 mb-2">
                    EPA Milestone Periods
                    <button type="button" class="btn btn-icon btn-create ms-2" id="btnAddCurriculum" title="Add Milestone">
                        <i class="fas fa-plus"></i>
                    </button>
                </h6>
                <hr />

                <div id="curriculumCollectionContainer" class="d-flex flex-column gap-3">
                    @Html.EditorFor(model => model.EPACurricula)
                </div>

                <h6 class="text-uppercase text-muted fw-bold mt-4 mb-2">
                    Assessment Forms
                    <button type="button" class="btn btn-icon btn-create ms-2" id="btnAdd" title="Add Form">
                        <i class="fas fa-plus"></i>
                    </button>
                </h6>
                <hr />

                <div id="collectionContainer">
                    @Html.EditorFor(model => model.Forms)
                </div>
            </div>

            <div class="card-footer bg-light d-flex justify-content-between">
                <a asp-action="Index" class="btn btn-icon btn-back" title="All EPAs">
                    <i class="fa-solid fa-list"></i>
                </a>
                <button type="submit" class="btn btn-create" title="Create">
                    <i class="fas fa-save"></i>
                </button>
            </div>

       
        </form>
    </div>
</div>


@section Scripts
{
    <script type="text/javascript">
        function updateSubSpecialitySelect() {
            const mainSelect = document.getElementById("specialitySelect");
            const secondSelect = document.getElementById("secondSelect");

            // Clear existing options and re-add the default placeholder
            secondSelect.innerHTML = '<option value="">-- Select a subspeciality --</option>';

            const selectedSpecialityId = mainSelect.value;

            if (!selectedSpecialityId) return;

            fetch('@Url.Action("GetSubOptions", "EPAs")?mainOptionId=' + selectedSpecialityId)
                .then(response => {
                    if (!response.ok) throw new Error('Network error');
                    return response.json();
                })
                .then(data => {
                    if (Array.isArray(data)) {
                        data.forEach(subOption => {
                            const newOption = document.createElement("option");
                            newOption.value = subOption.id;
                            newOption.textContent = subOption.name;
                            secondSelect.appendChild(newOption);
                        });
                    }
                })
                .catch(error => {
                    console.error('Error fetching subspecialities:', error);
                });
        }


        $("#btnAdd").on('click', function () {
            $.ajax({
                async: true,
                data: $('#form').serialize(),
                type: "POST",
                url: '/EPAs/AddForm',
                success: function (partialView) {
                    $('#collectionContainer').html(partialView);
                }
            });
        });

        $(document).on('click', '#btnDelete', function () {
            var form = $('#form').serialize();
            var parentRow = $(this).closest('.inputFormRow'); // uses class now instead of id
            var DisplayId = parentRow.find('.display-id').val();
            console.log(DisplayId);
            $.ajax({
                async: true,
                data: form + '&displayId=' + DisplayId,
                type: "POST",
                url: '/EPAs/DeleteForm',
                success: function (partialView) {
                    $('#collectionContainer').html(partialView);
                }
            });
        });

        $("#btnAddCurriculum").on('click', function () {
            $.ajax({
                async: true,
                data: $('#form').serialize(),
                type: "POST",
                url: '/EPAs/AddCurriculum',
                success: function (partialView) {
                    $('#curriculumCollectionContainer').html(partialView);

                    var Container = document.getElementById("curriculumCollectionContainer");
                    var Headings = document.getElementById("curriculumHeadings");
                    if( Container.children.length>0)
                    {
                        Headings.style.display = "flex";
                    }
                    else {
                        Headings.style.display = "none";
                    }
                }
            });
        });

        $(document).on('click', '#btnDeleteCurriculum', function () {
            var form = $('#form').serialize();
            var parentRow = $(this).closest('.inputFormRow'); // uses class now instead of id
            var DisplayId = parentRow.find('.display-id').val();
            console.log(DisplayId);
            $.ajax({
                async: true,
                data: form + '&displayId=' + DisplayId,
                type: "POST",
                url: '/EPAs/DeleteCurriculum',
                success: function (partialView) {
                    $('#curriculumCollectionContainer').html(partialView);

                    var Container = document.getElementById("curriculumCollectionContainer");
                    var Headings = document.getElementById("curriculumHeadings");
                    if (Container.children.length > 0) {
                        Headings.style.display = "flex";
                    }
                    else {
                        Headings.style.display = "none";
                    }
                }
            });
        });
        
    </script>
} 