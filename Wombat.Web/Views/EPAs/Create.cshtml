@model EPAVM

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>EPA</h4>
<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            
            <div>
                <label for="specialitySelect">Speciality</label>
                <select asp-for="SpecialityId" class="form-control" id="specialitySelect" onchange="updateSubSpecialitySelect()">
                    <option value="">-- Select a speciality --</option>
                    @foreach (var option in Model.Specialities)
                    {
                        <option value="@option.Id">@option.Name</option>
                    }
                </select>
            </div>
            <br/>

            <div id="subSpecialityContainer">
                <label for="secondSelect">Subspeciality</label>
                <select asp-for="SubSpecialityId" id="secondSelect" class="form-control" >
                    <option value="">-- Select a subspeciality --</option>
                    @foreach (var option in Model.SubSpecialities)
                    {
                        <option value="@option.Id">@option.Name</option>
                    }
                </select>
                <br/>
            </div>

            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <br/>

            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <br/>          

            <div hidden id="TemplateContainer">
                <div id="Templates">
                    <select id="myList">
                        <option value="">Select an Template</option>
                        @foreach (var item in ViewBag.Templates)
                        {
                            <option value="@item.Id">@item.Name</option>
                        }
                    </select>
                </div>
            </div>

            <div class="form-group col-md-12">
                <div id="newRow" class="col-md-12">
                    <input type="hidden" id="totalLans" value="0" />
                </div>
            </div>
            <br />

            <div class="form-group">
                <a asp-action="Index" class="btn btn-dark">Back to List</a> &nbsp;
                <button id="addTemplateRow" type="button" class="btn btn-info">Add Template</button> &nbsp;
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts
{
    <script>
        function updateSubSpecialitySelect() {
            var mainSelect = document.getElementById("specialitySelect");
            var subSpecialityContainer = document.getElementById("subSpecialityContainer");
            var secondSelect = document.getElementById("secondSelect");

            // Clear previous options
            secondSelect.innerHTML = '';

            if (mainSelect.value) {
                // Show the second select
                subSpecialityContainer.style.display = "block";

                // Fetch sub-options via AJAX
                fetch('@Url.Action("GetSubOptions", "EPAs")?mainOptionId=' + mainSelect.value)
                    .then(response => response.json())
                    .then(data => {
                        data.forEach(function (subOption) {
                            console.log(subOption.value);
                            var newOption = document.createElement("option");
                            newOption.value = subOption.id;
                            newOption.textContent = subOption.name;
                            secondSelect.appendChild(newOption);
                        });
                    })
                    .catch(error => console.error('Error fetching sub-options:', error));
            } 
        }

        $("#addTemplateRow").click(function () {

            var rowCount = parseInt($("#totalLans").val());
            rowCount++;
            $("#totalLans").val(rowCount);

            const masterSelect = document.getElementById("Templates");
            var newSelect = masterSelect.cloneNode(true);
            //newSelect.setAttribute('id', 'select' + rowCount );
            newSelect.childNodes[1].setAttribute('name', 'Templates[' + (rowCount - 1) + '].Id');
            newSelect.childNodes[1].setAttribute('class', 'form-control');
            newSelect.childNodes[1].setAttribute('style', 'width: 20%');

            var html = '';
            html += '<div id="inputFormRow">';
            html += '<div class="input-group">';

            //change id attribute to name attribute and modify the name
            html += newSelect.innerHTML;
            html += '<div style="width: 15%" class="input-group-append">';
            html += '<button style="width: 100%" id="removeRow" type="button" class="btn btn-danger">Remove</button>';
            html += '</div>';
            html += '</div>';
            html += '<br/>';
            html += '</div>';
            //html = '<p>Testing</p>';
            $('#newRow').append(html);

        });

        $(document).on('click', '#removeRow', function () {
            var rowCount = parseInt($("#totalLans").val());
            rowCount--;
            $("#totalLans").val(rowCount);
            $(this).closest('#inputFormRow').remove();
        });

    </script>
} 