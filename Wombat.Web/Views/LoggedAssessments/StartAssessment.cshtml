@model LoggedAssessmentVM

@{
    ViewData["Title"] = "Start Assessment";
}

<div class="container mt-4">
    <div class="card card-accent-create shadow-sm">
        <div class="card-header card-header-primary d-flex justify-content-between align-items-center">
            <h5 class="mb-0">
                <i class="fa-solid fa-clipboard-check me-2"></i>
                Assessment for @Model.EPA?.Name
            </h5>
            <div class="text-muted small">
                @Model.AssessmentDate.ToString("g")
            </div>
        </div>

        <div class="card-body p-4">
            <form asp-action="SubmitAssessment" method="post">
                @Html.AntiForgeryToken()

                <input type="hidden" asp-for="TraineeId" />
                <input type="hidden" asp-for="AssessorId" />
                <input type="hidden" asp-for="EPAId" />
                <input type="hidden" asp-for="FormId" />
                <input type="hidden" asp-for="AssessmentDate" />

                @for (int i = 0; i < Model.OptionCriterionResponses.Count; i++)
                {
                    var r = Model.OptionCriterionResponses[i];
                    var options = r.Criterion?.OptionsSet?.Options ?? new List<OptionVM>();
                    bool showRank = r.Criterion?.OptionsSet?.DisplayRank == true;
                    string name = $"OptionCriterionResponses[{i}].OptionId";
                    string cid = $"OptionCriterionResponses[{i}].CriterionId";
                    string comn = $"OptionCriterionResponses[{i}].Comment";
                    string cardId = $"crit_{r.Criterion?.Id}";

                    <div class="card shadow-sm mb-3" id="@cardId">
                        <div class="card-header bg-light text-muted d-flex justify-content-between align-items-center">
                            <div class="fw-semibold">@r.Criterion?.Description</div>
                            <input type="hidden" id="@cid" name="@cid" value="@r.Criterion?.Id" />
                        </div>

                        <div class="card-body">
                            @if (options.Any())
                            {
                                <div class="d-flex flex-column gap-2" role="group" aria-label="Options">
                                    @for (int j = 0; j < options.Count; j++)
                                    {
                                        var opt = options[j];
                                        var radioId = $"{name}_{opt.Id}";
                                        var isChecked = opt.Id == r.OptionId;

                                        <div class="form-check">
                                            <input class="form-check-input"
                                                   type="radio"
                                                   id="@radioId"
                                                   name="@name"
                                                   value="@opt.Id"
                                                   @(isChecked ? "checked" : null) />
                                            <label class="form-check-label" for="@radioId">
                                                @if (showRank)
                                                {
                                                    <span class="fw-semibold me-1">@opt.Rank</span>
                                                    @opt.Description
                                                }
                                                else
                                                {
                                                    @opt.Description
                                                }
                                            </label>
                                        </div>
                                    }
                                </div>

                                <!-- Optional comment under choices -->
                                <div class="mt-3">
                                    <label for="@comn" class="form-label text-muted small">Comment (optional)</label>
                                    <textarea class="form-control" name="@comn" id="@comn" rows="2">@r.Comment</textarea>
                                </div>
                            }
                            else
                            {
                                <!-- Free-text criterion -->
                                <div>
                                    <label for="@comn" class="form-label">Response</label>
                                    <textarea class="form-control" name="@comn" id="@comn" rows="3">@r.Comment</textarea>
                                </div>
                            }
                        </div>
                    </div>
                }

                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                <div class="d-flex justify-content-between">
                    <a asp-action="CreateFromList" class="btn btn-icon btn-back" title="Cancel">
                        <i class="fa-solid fa-arrow-left"></i>
                    </a>
                    <button type="submit" class="btn btn-icon btn-create" title="Submit Assessment">
                        <i class="fa-solid fa-paper-plane"></i>
                    </button>
                </div>
            </form>
        </div>

        <div class="card-footer bg-light d-flex justify-content-between">
            <span class="text-muted small"><i class="far fa-user me-1"></i>@Model.Trainee?.Email</span>
            <span class="text-muted small"><i class="far fa-user-check me-1"></i>@Model.Assessor?.Email</span>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        (function () {
            // Highlight selected option group for a clearer affordance
            document.addEventListener('change', function(e){
                if (e.target.matches('.form-check-input[type="radio"]')) {
                    const group = e.target.name;
                    // remove highlight in all cards for this group
                    document.querySelectorAll(`input[name="${group}"]`).forEach(inp => {
                        const card = inp.closest('.card');
                        if (card) card.classList.remove('border-success');
                    });
                    // add highlight to current
                    const card = e.target.closest('.card');
                    if (card) card.classList.add('border-success');
                }
            });
        })();
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
