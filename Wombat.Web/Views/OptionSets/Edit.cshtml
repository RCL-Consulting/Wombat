@model OptionSetVM

@{
    ViewData["Title"] = "Edit Response Option Set";
}

<div class="container mt-4">
    <div class="card card-accent-edit shadow-sm">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0"><i class="fas fa-sliders-h me-2"></i>Response Option Set - Edit</h5>
        </div>

        <form asp-action="Edit" id="form" method="post">
            <div class="card-body">
                <input type="hidden" asp-for="Id" />
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                <div class="mb-3">
                    <label asp-for="Description" class="form-label fw-semibold">Set Description</label>
                    <input asp-for="Description" class="form-control" />
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="InstitutionId" class="form-label fw-semibold">Institution</label>
                    <select asp-for="InstitutionId" asp-items="Model.Institutions" class="form-select">
                        @if (Model.Institutions.Count > 1)
                        {
                            <option value="">-- None --</option>
                        }
                    </select>
                </div>

                <div class="mb-3">
                    <label asp-for="SpecialityId" class="form-label fw-semibold">Speciality</label>
                    <select asp-for="SpecialityId" asp-items="Model.Specialities" class="form-select">
                        @if (Model.Specialities.Count > 1)
                        {
                            <option value="">-- None --</option>
                        }
                    </select>
                </div>

                <div class="mb-3">
                    <label asp-for="SubSpecialityId" class="form-label fw-semibold">Subspeciality</label>
                    <select asp-for="SubSpecialityId" asp-items="Model.SubSpecialities" class="form-select">
                        @if (Model.SubSpecialities.Count > 1)
                        {
                            <option value="">-- None --</option>
                        }
                    </select>
                </div>

                <div class="form-check mb-4">
                    <input asp-for="DisplayRank" class="form-check-input" />
                    <label asp-for="DisplayRank" class="form-check-label fw-semibold"></label>
                </div>

                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h5 class="mb-0"><i class="fas fa-list-ul me-2"></i>Response Options</h5>
                </div>
                <hr />

                <div id="collectionContainer" class="d-flex flex-column gap-3">
                    @Html.EditorFor(model => model.Options)
                </div>
            </div>

            <div class="card-footer bg-light">
                <div class="row text-center align-items-center">
                    <div class="col-md-4 d-flex justify-content-start">
                        <a asp-action="Index" class="btn btn-icon btn-back" title="Back to List">
                            <i class="fa-solid fa-list"></i>
                        </a>
                    </div>
                    <div class="col-md-4 d-flex justify-content-center flex-wrap gap-2">
                        <button type="button" class="btn btn-icon btn-create" id="btnAdd" title="Add Option">
                            <i class="fas fa-plus"></i>
                        </button>
                    </div>
                    <div class="col-md-4 d-flex justify-content-end">
                        <button type="submit" class="btn btn-icon btn-edit" title="Save Changes">
                            <i class="fas fa-save"></i>
                        </button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        const allSubSpecialities = @Html.Raw(Json.Serialize(Model.AllSubSpecialities));

        const specialityDropdown = document.getElementById("SpecialityId");
        const subSpecialityDropdown = document.getElementById("SubSpecialityId");

        function populateSubSpecialities(specialityId) {
            subSpecialityDropdown.innerHTML = "";

            const filtered = allSubSpecialities.filter(s => s.specialityId === parseInt(specialityId));

            // Only show "-- None --" if there's more than one choice
            if (filtered.length > 1) {
                const defaultOption = document.createElement("option");
                defaultOption.value = "";
                defaultOption.textContent = "-- None --";
                subSpecialityDropdown.appendChild(defaultOption);
            }

            filtered.forEach(sub => {
                const option = document.createElement("option");
                option.value = sub.id;
                option.textContent = sub.name;
                subSpecialityDropdown.appendChild(option);
            });
        }

        $('#btnAdd').on('click', function () {
            $.ajax({
                type: 'POST',
                url: '/OptionSets/AddOption',
                data: $('#form').serialize(),
                success: function (partial) {
                    $('#collectionContainer').html(partial);
                }
            });
        });

        $(document).on('click', '.btnDelete', function () {
            const parentRow = $(this).closest('.inputFormRow');
            const displayId = parentRow.find('.display-id').val();
            console.log(displayId);
            $.ajax({
                type: 'POST',
                url: '/OptionSets/DeleteOption',
                data: $('#form').serialize() + '&displayId=' + displayId,
                success: function (partial) {
                    $('#collectionContainer').html(partial);
                }
            });
        });

        specialityDropdown.addEventListener("change", function () {
            populateSubSpecialities(this.value);
        });

        if (specialityDropdown.value) {
            populateSubSpecialities(specialityDropdown.value);
        }
    </script>
}
