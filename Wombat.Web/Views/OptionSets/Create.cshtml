@model OptionSetVM

@{
    ViewData["Title"] = "Create";
}

<h1>Create a set of response options</h1>

<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="Create" id="form">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Description" class="control-label">Set Description</label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <br />

            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="DisplayRank" /> @Html.DisplayNameFor(model => model.DisplayRank)
                </label>
            </div>
            <br/>

            <h4>
                <button type="button" class="btn btn-success" id="btnAdd"><i class="fas fa-plus"></i>Create New</button>
                Response options
            </h4>
            <hr />
            <div id="collectionContainer">               
                @Html.EditorFor(model=>model.Options)
            </div>
            <br />

            <div class="form-group">
                <a asp-action="Index" class="btn btn-dark">Back to List</a> &nbsp;
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {

    <script type="text/javascript">
        $("#btnAdd").on('click', function () {
            $.ajax({
                async: true,
                data: $('#form').serialize(),
                type: "POST",
                url: '/OptionSets/AddOption',
                success: function (partialView) {
                    $('#collectionContainer').html(partialView);
                }
            });
        });

        $(document).on('click', '#btnDelete', function () {
             var form = $('#form').serialize();
             var parentDiv = $(this).closest('#inputFormRow');
             var DisplayId = parentDiv.find('#DisplayId').attr('value');
             console.log(DisplayId);
             $.ajax({
                 async: true,
                 data: form + '&displayId=' + DisplayId,
                 type: "POST",
                 url: '/OptionSets/DeleteOption',
                 success: function (partialView) {
                     $('#collectionContainer').html(partialView);
                 }
             });
        });
    </script>
}


